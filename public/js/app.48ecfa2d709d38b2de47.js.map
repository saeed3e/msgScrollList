{"version":3,"file":"js/app.48ecfa2d709d38b2de47.js","mappings":"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","sources":["webpack://photogallary/./src/components/header/header.jsx","webpack://photogallary/./src/components/shimmer/Shimmer.jsx","webpack://photogallary/./src/components/swipe/swipe.js","webpack://photogallary/./src/components/swipe/index.jsx","webpack://photogallary/./src/config/config.js","webpack://photogallary/./src/components/message/MessageCard.jsx","webpack://photogallary/./src/components/message/MessageContainer.jsx","webpack://photogallary/./src/lib/scrollWidth/index.js","webpack://photogallary/./src/components/root.jsx","webpack://photogallary/./src/index.jsx","webpack://photogallary/./src/lib/timeago/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\n\n/**\n * Create Header as a stateles component\n */\nexport const Header = ()=>{\n  return (\n    <div>\n      <div className=\"navbar-fixed\">\n        <nav>\n          <div className=\"nav-wrapper\">\n            <a href=\"#!\" className=\"sidenav-trigger\">\n              <span className=\"box-shadow-menu\" />\n            </a>\n            <a href=\"#!\" className=\"brand-logo\">\n              Messages\n            </a>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\n\n// Stateless react component return shimmer template.\nconst Template = ({ style }) => (\n  <div className=\"timeline-wrapper\" style={style}>\n    <div className=\"timeline-item z-depth-1\">\n      <div className=\"animated-background\">\n        <div className=\"background-masker header-left\" />\n        <div className=\"background-masker header-bottom\" />\n        <div className=\"background-masker subheader-left\" />\n        <div className=\"background-masker subheader-bottom\" />\n        <div className=\"background-masker content-first-end\" />\n        <div className=\"background-masker content-third-line\" />\n        <div className=\"background-masker content-fourth-line\" />\n      </div>\n    </div>\n  </div>\n);\n\n// Stateless react component responsible to show loading state for next messages.\nexport const Shimmer = ({ style, count = 1}) => {\n  const nodes = [];\n  for (let x = 1; x <= count; x++) {\n    nodes.push(<Template key={'shim-'+x} style={style} />);\n  }\n  return nodes;\n};\n","// https://github.com/GoogleChromeLabs/ui-element-samples/tree/gh-pages/swipeable-cards\n\n/**\n *\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nElement.prototype._parent = function(selector) {\n  var elem = this;\n  var ishaveselector = selector !== undefined;\n\n  while ((elem = elem.parentElement) !== null) {\n    if (elem.nodeType !== Node.ELEMENT_NODE) {\n      continue;\n    }\n\n    if (!ishaveselector || elem.matches(selector)) {\n      return elem;\n    }\n  }\n};\n\nexport class Cards {\n  constructor(obj) {\n    this.onStart = this.onStart.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.update = this.update.bind(this);\n    this.targetBCR = null;\n    this.target = null;\n    this.startX = 0;\n    this.currentX = 0;\n    this.screenX = 0;\n    this.targetX = 0;\n    this.draggingCard = false;\n    this.targetNodeClass = obj.targetNodeClass;\n    this.delegatedNodeSelector = obj.parentNodeSelector;\n\n    this.onCardDismissed = obj.onCardDismissed;\n\n    this.addEventListeners();\n\n    requestAnimationFrame(this.update);\n  }\n\n  addEventListeners() {\n    const delegatedNodeSelector = document.querySelector(this.delegatedNodeSelector) || document;\n    delegatedNodeSelector.addEventListener(\"touchstart\", this.onStart);\n    delegatedNodeSelector.addEventListener(\"touchmove\", this.onMove);\n    delegatedNodeSelector.addEventListener(\"touchend\", this.onEnd);\n    delegatedNodeSelector.addEventListener(\"mousedown\", this.onStart);\n    delegatedNodeSelector.addEventListener(\"mousemove\", this.onMove);\n    delegatedNodeSelector.addEventListener(\"mouseup\", this.onEnd);\n  }\n\n  onStart(evt) {\n    // debugger\n    if (this.target) return;\n    console.log('.'+this.targetNodeClass);\n    \n    const isParentTarget = evt.target._parent('.'+this.targetNodeClass);\n    if (!isParentTarget) return;\n\n    this.target = isParentTarget;\n    this.targetBCR = this.target.getBoundingClientRect();\n\n    this.startX = evt.pageX || evt.touches[0].pageX;\n    this.currentX = this.startX;\n\n    this.draggingCard = true;\n    this.target.style.willChange = \"transform\";\n  }\n\n  onMove(evt) {\n    if (!this.target) return;\n\n    this.currentX = evt.pageX || evt.touches[0].pageX;\n  }\n\n  onEnd(evt) {\n    if (!this.target) return;\n\n    this.targetX = 0;\n    let screenX = this.currentX - this.startX;\n    const threshold = this.targetBCR.width * 0.35;\n    if (Math.abs(screenX) > threshold) {\n      this.targetX = screenX > 0 ? this.targetBCR.width : -this.targetBCR.width;\n    }\n\n    this.draggingCard = false;\n  }\n\n  update() {\n    requestAnimationFrame(this.update);\n\n    if (!this.target) return;\n\n    if (this.draggingCard) {\n      this.screenX = this.currentX - this.startX;\n    } else {\n      this.screenX += (this.targetX - this.screenX) / 4;\n    }\n\n    const normalizedDragDistance =\n      Math.abs(this.screenX) / this.targetBCR.width;\n    const opacity = 1 - Math.pow(normalizedDragDistance, 0.5);\n\n    this.target.style.transform = `translateX(${this.screenX}px)`;\n    this.target.style.opacity = opacity;\n\n    // User has finished dragging.\n    if (this.draggingCard) return;\n\n    const isNearlyAtStart = Math.abs(this.screenX) < 0.1;\n    const isNearlyInvisible = opacity < 0.01;\n\n    // If the card is nearly gone.\n    if (isNearlyInvisible) {\n      // Bail if there's no target or it's not attached to a parent anymore.\n      if (!this.target || !this.target.parentNode) return;\n\n      this.target.style.opacity = 1;\n      this.target.style.transform = \"none\";\n      this.target.style.willChange = \"initial\";\n      let index = this.target.getAttribute(\"index\");\n      if (this.target) {\n        this.target = null;\n        this.onCardDismissed(parseInt(index));\n      }\n    } else if (isNearlyAtStart) {\n      this.resetTarget();\n    }\n  }\n\n  resetTarget() {\n    if (!this.target) return;\n\n    this.target.style.willChange = \"initial\";\n    this.target.style.transform = \"none\";\n    this.target = null;\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// this tiny library is responsible for adding swipe animation on cards(DOM nodes), \n// Reference : https://github.com/GoogleChromeLabs/ui-element-samples/tree/gh-pages/swipeable-cards\nimport { Cards } from \"./swipe.js\";\n\nexport class Swipe extends PureComponent {\n  componentDidMount() {\n    let {\n      onCardDismissed, // when card is dismissed or disappear from current view port then this callback function will invoke\n      targetNodeClass, // Swipe functionality will be enabled only on target(having the ) nodes \n      parentNodeSelector // It is a parent node selector for event delegation\n    } = this.props;\n\n    /**\n     * Init Swipe functionality on passed target DOM nodes\n     */\n    new Cards({\n      onCardDismissed,\n      targetNodeClass,\n      parentNodeSelector\n    });\n  }\n  render() {\n    return this.props.children\n  }\n}\n\n/**\n * Type check for Swipe component props\n */\nSwipe.propTypes = {\n  onCardDismissed: PropTypes.func.isRequired,\n  targetNodeClass: PropTypes.string.isRequired,\n  parentNodeSelector: PropTypes.string\n};\n","export const config = {\n  baseUrl: \"//message-list.appspot.com\"\n};\n","import React, { PureComponent } from \"react\";\nimport { timeago } from \"./../../lib/timeago/index.js\";\nimport { config } from \"./../../config/config.js\";\nexport class MessageCard extends PureComponent {\n  render() {\n    let {\n      id,\n      imgsrc,\n      name,\n      time,\n      index,\n      message,\n      style\n    } = this.props;\n\n    let timeage = timeago().ago(new Date(time).toUTCString());\n\n    /**\n     * Since image not accessible from \n     */\n    return (\n      <div className=\"swipeableCard\" index={index} style={style} >\n        <div className=\"card-panel\">\n          <header>\n            <img src={config.baseUrl+imgsrc} width=\"40\" height=\"40\" />\n            <div>\n              <div className=\"name\">{name}{index}</div>\n              <span className=\"time\">{timeage}</span>\n            </div>\n          </header>\n          <div className=\"msg block-with-text\">{message}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\n\n/**\n * Import Shimmer to show loading state of messages\n */\nimport { Shimmer } from \"./../shimmer/Shimmer.jsx\";\n\n/**\n * import List,AutoSizer and InfiniteLoader from react virtualized npm module.\n * List: This component renders a windowed list (rows) of elements. It uses a Grid internally to render the rows and all props are relayed to that inner Grid.\n * AutoSizer: High-order component that automatically adjusts the width and height of a single child.\n * InfiniteLoader: A component that manages just-in-time fetching of data as a user scrolls up or down in a list.\n */\nimport { List, AutoSizer, InfiniteLoader } from \"react-virtualized\";\n\n/**\n * Create a React Swipe component to enable swipe functionality on card messages\n */\nimport { Swipe } from \"./../swipe/index.jsx\";\n\n/**\n * MessageCard component define the layout of message card\n */\nimport { MessageCard } from \"./MessageCard.jsx\";\n\n/**\n * Get the cross browser scrollWidth\n */\nimport { getScrollbarWidth } from \"./../../lib/scrollWidth/index.js\";\n\n/**\n * Common configuration file contain all the API paths used in the application\n */\nimport { config } from \"./../../config/config.js\";\n\nexport class MessageContainer extends PureComponent {\n  constructor() {\n    super();\n    /**\n     * contain next message token reference for lazy loading of messages\n     */\n    this.nextToken = \"\";\n    \n    /**\n     * State object contain msgList array to store messages\n     */\n    this.state = {\n      msgList: []\n    };\n\n    // Define card top spacing from eachother in pixel;\n    this.cardTopSpacing = 8;\n\n    //cardLeftMargin from window in percentage.\n    this.cardLeftMargin = 20;\n\n    //cardLeftPadding from window in pixel.\n    this.cardLeftPadding = 21;\n\n    //header height of card in pixel\n    this.cardHeaderHeight = 42;\n    \n    //cardTopBottom height in pixel\n    this.cardTopBottomPadding = 22 * 2;\n    \n    // card contect top margin in pixel\n    this.cardContentTopMargin = 12;\n  }\n\n  dummyNodetoFindout_contentWidth = () => {\n    /**\n     * calculate the height of message's content, to set dynamic height on each card\n     */\n    var test = document.createElement(\"div\");\n    test.classList.add(\"block-with-text\", \"dummyNode\");\n    test.style.width = window.innerWidth - 2*(this.cardLeftMargin  + this.cardLeftPadding + getScrollbarWidth())+'px',\n    document.body.appendChild(test);\n    return test;\n  };\n\n  /**\n   * This function responsible to get data from server and update the MessageContainer\n   * component's internal state by using 'this.setState' function\n   */\n  getDataFromServer = () => {\n    // fetching data using fetch API\n    return fetch(\n      `${config.baseUrl + \"/messages\"}?limit=20&pageToken=${this.nextToken}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        this.nextToken = data.pageToken;\n\n        const dummyNode = this.dummyNodetoFindout_contentWidth();\n\n        // Adding new height key in message object based on the height of the content\n        data.messages.map((value, index) => {\n          dummyNode.innerText = value.content;\n          value.height = dummyNode.clientHeight + this.cardTopSpacing;\n          return value;\n        });\n        dummyNode.remove();\n\n        /**\n         * Update internal state of the component with new messages\n         */\n        this.setState({\n          msgList: [...this.state.msgList, ...data.messages]\n        });\n      });\n  };\n\n  /**\n   * Responsible for rendering a single row, given its index.\n   */\n  rowRenderer = ({\n    key, // Unique key within array of rows\n    index, // Index of row within collection\n    style // Style object to be applied to row (to position it)\n  }) => {\n    let view = null;\n\n    // Created a modified object as per need\n    let modifiedStyle = {\n      ...style,\n      width: `calc(100% - ${2*this.cardLeftMargin}px)`,\n      left: this.cardLeftMargin + \"px\",\n      top: style.top + (2 * this.cardTopSpacing)\n    };\n\n    if (this.state.msgList[index]) {\n      // if message exist at give index then draw the message card\n\n      // use object destructoring to extract values from message object.\n      let { author, content, updated, id } = this.state.msgList[index];\n\n      view = (\n        <MessageCard\n          style={modifiedStyle}\n          key={\"isml-\" + index}\n          index={index}\n          imgsrc={author.photoUrl}\n          name={author.name}\n          time={updated}\n          id={id}\n          message={content}\n          onCardDismissed={this.onCardDismissed}\n        />\n      );\n    } else {\n      /**\n       * Only show when user scroll the page or show the loading state of new messages\n       */\n      if (this.state.msgList.length) {\n        view = <Shimmer key={\"shim-\" + index} style={modifiedStyle} />;\n      }\n    }\n    return view;\n  };\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   */\n  isRowLoaded = ({ index }) => {\n    return !!this.state.msgList[index];\n  };\n\n  /**\n   * Update the internal state of the component with deleted message from msgList array\n   */\n  onCardDismissed = index => {\n    const finalArray = [\n      ...this.state.msgList.slice(0, index),\n      ...this.state.msgList.slice(index + 1, this.state.msgList.length)\n    ];\n    // set the internal state with deleted message\n    this.setState({\n      msgList: finalArray\n    });\n  };\n\n  /**\n   * Callback used to render placeholder content when rowCount is 0\n   */\n  noRowsRenderer = () => {\n    return (\n      <div className=\"initialShimmer\">\n        <Shimmer count={4} />\n      </div>\n    );\n  };\n\n  render() {\n    let { msgList } = this.state;\n    let listSize = !msgList.length ? 1 : msgList.length + 1;\n\n    return (\n      <div className=\"msgCont\">\n        <Swipe\n          onCardDismissed={this.onCardDismissed}\n          parentNodeSelector={\".msgCont\"}\n          targetNodeClass={\"swipeableCard\"}>\n          <InfiniteLoader\n            isRowLoaded={this.isRowLoaded}\n            loadMoreRows={() => this.getDataFromServer()}\n            rowCount={listSize}>\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer className=\"card-container\">\n                {({ height, width }) => (\n                  <List\n                    ref={registerChild}\n                    onRowsRendered={onRowsRendered}\n                    width={width}\n                    height={height}\n                    rowCount={listSize}\n                    rowHeight={({ index }) => {\n                      const rowHeight = msgList[index]\n                        ? msgList[index].height +\n                          this.cardHeaderHeight +\n                          this.cardTopBottomPadding +\n                          this.cardContentTopMargin\n                        : 175;\n                      return rowHeight;\n                    }}\n                    rowRenderer={this.rowRenderer}\n                    noRowsRenderer={this.noRowsRenderer}\n                  />\n                )}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        </Swipe>\n      </div>\n    );\n  }\n}\n","//Calculate the cross browser scrollWidth\n//Source: https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\n\nexport function getScrollbarWidth() {\n  var outer = document.createElement(\"div\");\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"100px\";\n  outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n\n  document.body.appendChild(outer);\n\n  var widthNoScroll = outer.offsetWidth;\n  // force scrollbars\n  outer.style.overflow = \"scroll\";\n\n  // add innerdiv\n  var inner = document.createElement(\"div\");\n  inner.style.width = \"100%\";\n  outer.appendChild(inner);        \n\n  var widthWithScroll = inner.offsetWidth;\n\n  // remove divs\n  outer.parentNode.removeChild(outer);\n\n  return widthNoScroll - widthWithScroll;\n}","import React, { PureComponent } from \"react\";\nimport { Header } from \"./header/header.jsx\";\nimport { MessageContainer } from \"./message/MessageContainer.jsx\";\n\n/**\n * Import project style sass file\n */\nimport \"./../sass/style.scss\";\n\nexport default class RootComponent extends React.PureComponent {\n  render() {\n    return [\n      /**\n       * Header/Navigation component\n       */\n      <Header key=\"header\" />,\n      /**\n       * Message container component responsible to display messages\n       */\n      <MessageContainer key=\"msgCont\" />\n    ];\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * Import root/main componet or entry point of application\n */\nimport RootComponent from \"./components/root.jsx\";\n\n/**\n * Render the application by \"RootComponent\" inside a div having Id=\"root\" \n */\nconst rootElem = document.createElement('div');\nrootElem.id = \"root\"\ndocument.body.appendChild(rootElem);\nReactDOM.render(<RootComponent />, document.getElementById(\"root\"));\n","\"use strict\";\nexport const timeago = function() {\n\n  var o = {\n    second: 1000,\n    minute: 60 * 1000,\n    hour: 60 * 1000 * 60,\n    day: 24 * 60 * 1000 * 60,\n    week: 7 * 24 * 60 * 1000 * 60,\n    month: 30 * 24 * 60 * 1000 * 60,\n    year: 365 * 24 * 60 * 1000 * 60\n  };\n  var obj = {};\n\n  obj.ago = function(nd, s) {\n    var r = Math.round,\n        dir = ' ago',\n      pl = function(v, n) {\n        return (s === undefined) ? n + ' ' + v + (n > 1 ? 's' : '') + dir : n + v.substring(0, 1)\n      },\n      ts = Date.now() - new Date(nd).getTime(),\n      ii;\n    if( ts < 0 )\n    {\n      ts *= -1;\n      dir = ' from now';\n    }\n    for (var i in o) {\n      if (r(ts) < o[i]) return pl(ii || 'm', r(ts / (o[ii] || 1)))\n      ii = i;\n    }\n    return pl(i, r(ts / o[i]));\n  }\n\n  obj.today = function() {\n    var now = new Date();\n    var Weekday = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\");\n    var Month = new Array(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\");\n    return Weekday[now.getDay()] + \", \" + Month[now.getMonth()] + \" \" + now.getDate() + \", \" + now.getFullYear();\n  }\n\n  obj.timefriendly = function(s) {\n    var t = s.match(/(\\d).([a-z]*?)s?$/);\n    return t[1] * eval(o[t[2]]);\n  }\n\n  obj.mintoread = function(text, altcmt, wpm) {\n    var m = Math.round(text.split(' ').length / (wpm || 200));\n    return (m || '< 1') + (altcmt || ' min to read');\n  }\n\n  return obj;\n}\n"],"names":["Header","className","href","Template","style","Shimmer","count","nodes","x","push","key","Element","prototype","_parent","selector","elem","this","ishaveselector","undefined","parentElement","nodeType","Node","ELEMENT_NODE","matches","Cards","obj","onStart","bind","onMove","onEnd","update","targetBCR","target","startX","currentX","screenX","targetX","draggingCard","targetNodeClass","delegatedNodeSelector","parentNodeSelector","onCardDismissed","addEventListeners","requestAnimationFrame","document","querySelector","addEventListener","evt","console","log","isParentTarget","getBoundingClientRect","pageX","touches","willChange","threshold","width","Math","abs","normalizedDragDistance","opacity","pow","transform","isNearlyAtStart","parentNode","index","getAttribute","parseInt","resetTarget","Swipe","props","children","PureComponent","propTypes","PropTypes","config","MessageCard","imgsrc","id","name","time","message","timeage","timeago","ago","Date","toUTCString","src","height","MessageContainer","test","createElement","classList","add","window","innerWidth","cardLeftMargin","cardLeftPadding","outer","visibility","msOverflowStyle","body","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","removeChild","getScrollbarWidth","fetch","nextToken","then","response","json","data","pageToken","dummyNode","dummyNodetoFindout_contentWidth","messages","map","value","innerText","content","clientHeight","cardTopSpacing","remove","setState","msgList","state","view","modifiedStyle","left","top","author","updated","photoUrl","length","finalArray","slice","cardHeaderHeight","cardTopBottomPadding","cardContentTopMargin","listSize","isRowLoaded","loadMoreRows","getDataFromServer","rowCount","onRowsRendered","registerChild","ref","rowHeight","rowRenderer","noRowsRenderer","RootComponent","React","rootElem","ReactDOM","getElementById","o","second","minute","hour","day","week","month","year","nd","s","ii","r","round","dir","pl","v","n","substring","ts","now","getTime","i","Weekday","Array","Month","getDay","getMonth","getDate","getFullYear","t","match","eval","text","altcmt","wpm","split"],"sourceRoot":""}